package Project.ChauPhim.Controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import Project.ChauPhim.DAOs.CustomerDAO;
import Project.ChauPhim.Entities.Customer;
import jakarta.servlet.http.HttpSession;

@Controller
public class CustomerController {
    @Autowired
    private CustomerDAO customerDAO;
    
    @Autowired
    private PasswordEncoder passwordEncoder;
    
    @GetMapping("/sign-in-customer")
    public String showSignInPage(Model model) {
        model.addAttribute("customer", new Customer());
        return "sign-in-customer";
    }
    
    @PostMapping("/sign-in-customer")
    @Transactional
    public String processRegisterManager(
        @ModelAttribute("customer") Customer customer,
        Model model
    ) {
        try {
            customer.setPassword(passwordEncoder.encode(customer.getPassword()));
            customerDAO.addCustomer(customer);
            return "redirect:/login-customer?registered=true";
        } catch (Exception e) {
            model.addAttribute("error", "Lỗi: " + e.getMessage());
            return "sign-in-customer";
        }
    }

    @GetMapping("/login-customer")
    public String showLoginPage() {
        return "login-customer"; // Trả về trang HTML đăng nhập
    }

    // hien tai login xong se redirect vao trang profile
    @PostMapping("/login-customer") // xac thuc user va mat khau, luu username vao HTTPSession
    public String processLogin(@RequestParam String username, @RequestParam String password, HttpSession session, Model model) {
        try {
            Customer customer = customerDAO.findByUserName(username);
            if (customer != null && passwordEncoder.matches(password, customer.getPassword())) {
                session.setAttribute("username", username); // Lưu username vào session
                return "customer-profile";
            } else {
                model.addAttribute("error", "Tên đăng nhập hoặc mật khẩu sai!");
                return "login-customer";
            }
        } catch (Exception e) {
            model.addAttribute("error", "Lỗi: " + e.getMessage());
            return "login-customer";
        }
    }


    // xem thong tin ca nhan
    @GetMapping("/customer-profile")
    public String viewProfile(Model model, HttpSession session) {
        String username = (String) session.getAttribute("username"); // hoặc từ SecurityContextHolder nếu có
        if (username != null) {
            Customer customer = customerDAO.findByUserName(username);
            model.addAttribute("customer", customer);
            return "customer-profile";
        } else {
            return "redirect:/login-customer"; // Nếu không có session, yêu cầu đăng nhập lại
        }
    }
    
    // cap nhat thong tin ca nhan
    @PostMapping("/customer-profile")
    public String updateCustomerInfo(
        @ModelAttribute("customer") Customer customer,
        BindingResult result,
        HttpSession session,
        Model model
    ) {
        String username = (String) session.getAttribute("username");
        if (username == null) {
            return "redirect:/login-customer";
        }
        
        try {
            customerDAO.updateEmailAndName(username, customer.getEmail(), customer.getName());
            return "redirect:/customer-profile?success=true";
        } catch (Exception e) {
            // Giữ lại giá trị đã nhập
            Customer existingCustomer = customerDAO.findByUserName(username);
            existingCustomer.setEmail(customer.getEmail());
            existingCustomer.setName(customer.getName());
            
            model.addAttribute("customer", existingCustomer);
            model.addAttribute("error", e.getMessage());
            return "customer-profile";
        }
    }
}